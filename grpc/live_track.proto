syntax = "proto3";

package awa.v1;

service LiveTrackService {
  rpc Create(CreateLiveTrackRequest) returns (CreateLiveTrackResponse);
  rpc Track(stream LiveTrackRequest) returns (stream LiveTrackResponse);
  rpc Statistics(StatisticsRequest) returns (StatisticsResponse);
}

message CreateLiveTrackRequest {
  string trace_id = 1;
  int64 timestamp = 2;
  string device_id = 3;
  string device_type = 4;
}

message CreateLiveTrackResponse {
  string trace_id = 1;
  oneof content {
    LiveTrackCreated live_track_created = 2;
    LiveTrackError error = 3;
  }
}

message LiveTrackCreated {
  string id = 1;
  int64 created_at = 2;
}

message LiveTrackRequest {
  // client generated trace_id.
  string trace_id = 1;

  // track id created earlier.
  string track_id = 2;

  // used for filtering.
  map<string, string> tags = 3;
  // timestamp in seconds.
  int64 timestamp = 4;

  // device information.
  string device_id = 5;
  string device_type = 6;
  string firmware_version = 7;

  // classify what's happening.
  Flag flag = 10;

  oneof content {
    LiveTrackSegment segment = 8;
    LiveTrackPosition position = 9;
  }
}

message LiveTrackSegment {
  // BigEndian
  // for each point:
  // [float (32 bits): lon]
  // [float (32 bits): lat]
  // [unsigned short (16 bits): altitude - 20000 in meters]
  // [6 bits: reserved]
  // [unsigned 10 bits: time_offset in seconds]
  // [unsigned byte (8 bits): horizontal accuracy in meters]
  // [unsigned byte (8 bits): altitude accuracy in meters]
  repeated bytes data = 1;
}

message LiveTrackPosition {
  // BigEndian
  // [float (32 bits): lon]
  // [float (32 bits): lat]
  // [unsigned short (16 bits): altitude - 20000 in meters]
  // [unsigned byte (8 bits): horizontal accuracy in meters]
  // [unsigned byte (8 bits): altitude accuracy in meters]
  bytes data = 1;
}

enum Flag {
  UNKNOWN = 0;
  STARTING = 1;
  RESUMING = 2;
  STOPPING = 3;
}

message LiveTrackResponse {
  string trace_id = 1;
  oneof content {
    LiveTrackSuccess success = 2;
    LiveTrackError error = 3;
  }
}

message LiveTrackError {
  // the error code is alphanumeric.
  string code = 1;
  // An summary of the error.
  string message = 2;

  // additional data.
  map<string, string> details = 3;
}

message LiveTrackSuccess {
  // the number of positions which were tracked.
  int32 num_positions = 1;
  // the total length of the track in meters.
  int64 length = 2;
}

message StatisticsRequest {
  string trace_id = 1;
  
}

message StatisticsResponse {
  string trace_id = 1;
}